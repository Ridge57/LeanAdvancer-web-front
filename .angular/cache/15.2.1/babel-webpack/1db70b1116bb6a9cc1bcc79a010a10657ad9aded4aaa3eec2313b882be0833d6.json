{"ast":null,"code":"import { Chart } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/services/checklist.service\";\nimport * as i2 from \"src/services/irritant.service\";\nimport * as i3 from \"src/services/idee.service\";\nimport * as i4 from \"src/services/standard.service\";\nimport * as i5 from \"src/services/zone.service\";\nimport * as i6 from \"src/services/database.service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"../side-navigation/side-navigation.component\";\nimport * as i10 from \"../top-navigation/top-navigation.component\";\nconst _c0 = [\"irritantAreaChart\"];\nconst _c1 = [\"irritantPieChart\"];\nconst _c2 = [\"zonesIrritantAreaChart\"];\nconst _c3 = [\"zonesIrritantPieChart\"];\nconst _c4 = [\"suggestionAreaChart\"];\nconst _c5 = [\"suggestionPieChart\"];\nfunction DashboardComponent_option_69_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 42);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const annee_r6 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", annee_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(annee_r6);\n  }\n}\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(checklistServ, irrService, ideeService, standardService, zoneService, dataBaseService) {\n      this.checklistServ = checklistServ;\n      this.irrService = irrService;\n      this.ideeService = ideeService;\n      this.standardService = standardService;\n      this.zoneService = zoneService;\n      this.dataBaseService = dataBaseService;\n      this.nbIrritantsATraiter = 0;\n      this.nbIrritantsEnCours = 0;\n      this.nbIrritantsSoldes = 0;\n      this.totalIrritantAnnuel = 0;\n      this.totalIdeesAnnuel = 0;\n      this.nbIdeesATraiter = 0;\n      this.nbIdeesEnEtude = 0;\n      this.nbIdeesAcceptees = 0;\n      this.nbIdeesNonRetenues = 0;\n      this.months = ['Jan', 'Fév', 'Mar', 'Avr', 'Mai', 'Juin', 'Juil', 'Aout', 'Sept', 'Oct', 'Nov', 'Déc'];\n      this.motifs = [];\n      this.valeurs = [];\n    }\n    ngAfterViewInit() {\n      this.irrChartAreaInit(this.currentYear);\n      this.irrChartPieInit(this.currentYear);\n      this.sgChartAreaInit(this.currentYear);\n      this.sgChartPieInit(this.currentYear);\n      this.nbIrrByZoneChartAreaInit(this.currentYear);\n    }\n    ngOnInit() {\n      this.currentYear = new Date().getFullYear();\n      this.getNombreTachesATraiter();\n      this.getProcesingRate();\n      this.getSuggestionsProcessingRate();\n      this.getStandardsMoisCourant();\n      this.anneesListInit();\n      this.getSortedCategoriesIrritant(this.currentYear);\n    }\n    /* liste les années sélectionnables */\n    anneesListInit() {\n      this.anneesList = [];\n      var currentYear = new Date().getFullYear();\n      for (var i = currentYear; i > 2017; i--) {\n        this.anneesList.push(i);\n      }\n    }\n    /* mise à jour des données en fonction de l'année sélectionnée */\n    selectYear(year) {\n      this.varIrritantChartArea.destroy();\n      this.varIrritantChartPiedata.destroy();\n      this.varSgChartArea.destroy();\n      this.varSgChartPiedata.destroy();\n      this.varZoneChartArea.destroy();\n      this.nbIdeesEnEtude = 0;\n      this.nbIdeesAcceptees = 0;\n      this.nbIdeesNonRetenues = 0;\n      this.nbIdeesATraiter = 0;\n      this.nbIrritantsATraiter = 0;\n      this.nbIrritantsEnCours = 0;\n      this.nbIrritantsSoldes = 0;\n      this.irrChartAreaInit(year);\n      this.irrChartPieInit(year);\n      this.sgChartAreaInit(year);\n      this.sgChartPieInit(year);\n      this.nbIrrByZoneChartAreaInit(year);\n      this.getSortedCategoriesIrritant(year);\n    }\n    /* nombre de standards publiés ce mois*/\n    getStandardsMoisCourant() {\n      this.standardService.getstandardsMoisCourant().subscribe(data => {\n        this.colorManagement(data, 'standard');\n      });\n    }\n    /* nombre de taches à traiter issues des checklist de ctrl*/\n    getNombreTachesATraiter() {\n      this.checklistServ.getNombreTachesATraiter().subscribe(data => {\n        this.colorManagement(data, 'tache');\n      });\n    }\n    /* % de traitement des suggestions */\n    getProcesingRate() {\n      this.irrService.getIrritantProcessingRate().subscribe(data => {\n        this.colorManagement(data, 'irritant');\n      });\n    }\n    /* % de traitement des suggestions */\n    getSuggestionsProcessingRate() {\n      this.ideeService.getSuggestionsProcessingRate().subscribe(data => {\n        this.colorManagement(data, 'suggestion');\n      });\n    }\n    /* graphique nombre d'irritants par mois (bars) */\n    irrChartAreaInit(year) {\n      this.irrService.getNbreIrritantsParMois(year).subscribe(data => {\n        this.varIrritantChartArea = this.generateChartAreaInit(this.irrChartArea, this.irritantAreaChart, data);\n      });\n    }\n    /* graphique de la répartition des irritants par status (rond) */\n    irrChartPieInit(year) {\n      this.irrService.getIrritantsCurrentYear(year).subscribe(data => {\n        this.varIrritantChartPiedata = this.generateChartPieInit(this.irrChartPie, this.irritantPieChart, data, 'irr');\n      });\n    }\n    /* graphique nb irr par zones (bars) */\n    nbIrrByZoneChartAreaInit(year) {\n      this.zoneService.getZonesSortedByNbIrritant(year).subscribe(data => {\n        this.varZoneChartArea = this.generateSortedZonesChart(this.zonesIrrChartArea, this.zonesIrritantAreaChart, data);\n      });\n    }\n    /* graphique nombre de suggestions par mois (bars) */\n    sgChartAreaInit(year) {\n      this.ideeService.getNbreIdeesParMois(year).subscribe(data => {\n        this.varSgChartArea = this.generateChartAreaInit(this.sgChartArea, this.suggestionAreaChart, data);\n      });\n    }\n    /* graphique de la répartition des suggestion par status (rond) */\n    sgChartPieInit(year) {\n      this.ideeService.getIdeesCurrentYear(year).subscribe(data => {\n        this.varSgChartPiedata = this.generateChartPieInit(this.sgChartPie, this.suggestionPieChart, data, 'sg');\n      });\n    }\n    /* top 5 des motifs d'irritants */\n    getSortedCategoriesIrritant(annee) {\n      this.irrService.getSortedCategoriesIrritant(annee).subscribe(data => {\n        this.motifs = Object.keys(data);\n        this.valeurs = Object.values(data);\n      });\n    }\n    /* générer un fichier xlsx de la database */\n    generateDB() {\n      this.dataBaseService.exportDataBase().subscribe(data => {\n        window.location.href = data[0];\n      });\n    }\n    /****************************************************************************************\r\n    *******************************FONCTION FACTORISEES**************************************\r\n    *****************************************************************************************/\n    /*création des graphes à bar (Area Chart)*/\n    generateChartAreaInit(varChartArea, htmlElement, data) {\n      return varChartArea = new Chart(htmlElement.nativeElement, {\n        type: 'bar',\n        data: {\n          labels: this.months,\n          datasets: [{\n            label: 'Occurences',\n            lineTension: 0.3,\n            backgroundColor: '#B8E9FF',\n            borderColor: 'rgba(78, 115, 223, 1)',\n            pointRadius: 3,\n            pointBackgroundColor: 'rgba(2,117,216,1)',\n            pointBorderColor: 'rgba(2,117,216,1)',\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(2,117,216,1)',\n            pointHitRadius: 50,\n            pointBorderWidth: 2,\n            data: [data[0], data[1], data[2], data[3], data[4], data[5], data[6], data[7], data[8], data[9], data[10], data[11] //dec\n            ]\n          }]\n        },\n\n        options: {\n          scales: {\n            xAxes: [{\n              time: {\n                unit: 'month'\n              },\n              gridLines: {\n                display: false,\n                drawBorder: false\n              },\n              ticks: {\n                maxTicksLimit: 13\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                min: 0,\n                max: data[12],\n                maxTicksLimit: 5\n              },\n              gridLines: {\n                color: \"rgb(234, 236, 244)\",\n                zeroLineColor: \"rgb(234, 236, 244)\",\n                drawBorder: false,\n                borderDash: [2],\n                zeroLineBorderDash: [2]\n              }\n            }]\n          },\n          legend: {\n            display: false\n          }\n        }\n      });\n    }\n    /*création des graphes à bar (Area Chart)*/\n    generateSortedZonesChart(varChartArea, htmlElement, data) {\n      var dataKeys = [];\n      var dataValues = [];\n      dataKeys = Object.keys(data);\n      dataValues = Object.values(data);\n      if (dataKeys.length > 5) {\n        while (dataKeys.length > 5) {\n          dataKeys.pop();\n          dataValues.pop();\n        }\n      }\n      return varChartArea = new Chart(htmlElement.nativeElement, {\n        type: 'bar',\n        data: {\n          labels: dataKeys,\n          datasets: [{\n            label: 'Occurences',\n            lineTension: 0.3,\n            backgroundColor: '#B8E9FF',\n            borderColor: 'rgba(78, 115, 223, 1)',\n            pointRadius: 3,\n            pointBackgroundColor: 'rgba(2,117,216,1)',\n            pointBorderColor: 'rgba(2,117,216,1)',\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(2,117,216,1)',\n            pointHitRadius: 50,\n            pointBorderWidth: 2,\n            data: dataValues\n          }]\n        },\n        options: {\n          scales: {\n            xAxes: [{\n              time: {\n                unit: 'month'\n              },\n              gridLines: {\n                display: false,\n                drawBorder: false\n              },\n              ticks: {\n                maxTicksLimit: 13\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                min: 0,\n                //max: data[12],//max\n                maxTicksLimit: 5\n              },\n              gridLines: {\n                color: \"rgb(234, 236, 244)\",\n                zeroLineColor: \"rgb(234, 236, 244)\",\n                drawBorder: false,\n                borderDash: [2],\n                zeroLineBorderDash: [2]\n              }\n            }]\n          },\n          legend: {\n            display: false\n          }\n        }\n      });\n    }\n    /*création des graphiques circulaires (Pie Chart)*/\n    generateChartPieInit(varChartPiedata, htmlEltPieChart, data, type) {\n      var dataArr = Object.values(data);\n      var labelsArray = [];\n      var dataArray = [];\n      if (type === 'sg') {\n        this.totalIdeesAnnuel = dataArr.length;\n        for (var i = 0; i < dataArr.length; i++) {\n          if (dataArr[i].status == \"A traiter\") {\n            this.nbIdeesATraiter++;\n          }\n          if (dataArr[i].status == \"En étude\") {\n            this.nbIdeesEnEtude++;\n          }\n          if (dataArr[i].status == \"Acceptée\") {\n            this.nbIdeesAcceptees++;\n          }\n          if (dataArr[i].status == \"Non retenue\") {\n            this.nbIdeesNonRetenues++;\n          }\n        }\n        labelsArray = ['A traiter', 'En étude', 'Acceptées'];\n        dataArray = [this.nbIdeesATraiter, this.nbIdeesEnEtude, this.nbIdeesAcceptees];\n      }\n      if (type === 'irr') {\n        this.totalIrritantAnnuel = dataArr.length;\n        for (var i = 0; i < dataArr.length; i++) {\n          if (dataArr[i].status == \"A traiter\") {\n            this.nbIrritantsATraiter++;\n          }\n          if (dataArr[i].status == \"En cours\") {\n            this.nbIrritantsEnCours++;\n          }\n          if (dataArr[i].status == \"Soldé\") {\n            this.nbIrritantsSoldes++;\n          }\n        }\n        labelsArray = ['A traiter', 'En cours', 'Soldés'];\n        dataArray = [this.nbIrritantsATraiter, this.nbIrritantsEnCours, this.nbIrritantsSoldes];\n      }\n      return varChartPiedata = new Chart(htmlEltPieChart.nativeElement, {\n        type: 'doughnut',\n        data: {\n          labels: labelsArray,\n          datasets: [{\n            data: dataArray,\n            backgroundColor: ['#4e73df', '#36b9cc', '#1cc88a'],\n            hoverBackgroundColor: ['#2e59d9', '#2c9faf', '#17a673'],\n            hoverBorderColor: \"rgba(234, 236, 244, 1)\"\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          tooltips: {\n            backgroundColor: \"rgb(255,255,255)\",\n            bodyFontColor: \"#858796\",\n            borderColor: '#dddfeb',\n            borderWidth: 1,\n            xPadding: 15,\n            yPadding: 15,\n            displayColors: false,\n            caretPadding: 10\n          },\n          legend: {\n            display: false\n          },\n          cutoutPercentage: 80\n        }\n      });\n    }\n    /*gestion des couleurs selon le niveau des données*/\n    colorManagement(data, type) {\n      if (type === 'standard') {\n        this.nombreStandards = data;\n        if (data > 2) {\n          this.borderTypeStandards = \"border-left-success\";\n          this.textColorStandards = \"text-success\";\n          this.emojiStandards = \"fa-grin-alt text-success\";\n        }\n        if (data > 0 && data <= 2) {\n          this.borderTypeStandards = \"border-left-warning\";\n          this.textColorStandards = \"text-warning\";\n          this.emojiStandards = \"fa-meh text-warning\";\n        }\n        if (data < 1) {\n          this.borderTypeStandards = \"border-left-danger\";\n          this.textColorStandards = \"text-danger\";\n          this.emojiStandards = \"fa-frown text-danger\";\n        }\n      }\n      if (type === 'tache') {\n        this.nombreTachesATraiter = data;\n        if (data >= 10) {\n          this.borderTypeTachesATraiter = \"border-left-danger\";\n          this.textColorTachesATraiter = \"text-danger\";\n          this.emojiTachesATraiter = \"fa-frown text-danger\";\n        }\n        if (data > 0 && data < 10) {\n          this.borderTypeTachesATraiter = \"border-left-warning\";\n          this.textColorTachesATraiter = \"text-warning\";\n          this.emojiTachesATraiter = \"fa-meh text-warning\";\n        }\n        if (data < 1) {\n          this.borderTypeTachesATraiter = \"border-left-success\";\n          this.textColorTachesATraiter = \"text-success\";\n          this.emojiTachesATraiter = \"fa-grin-alt text-success\";\n        }\n      }\n      if (type === 'irritant') {\n        this.processingRateIrritant = data;\n        if (data < 50) {\n          this.bgColorTypeIrritant = \"bg-danger\";\n          this.borderTypeIrritant = \"border-left-danger\";\n          this.textColorIrritant = \"text-danger\";\n          this.emojiIrritant = \"fa-frown text-danger\";\n        }\n        if (data >= 50 && data < 80) {\n          this.bgColorTypeIrritant = \"bg-warning\";\n          this.borderTypeIrritant = \"border-left-warning\";\n          this.textColorIrritant = \"text-warning\";\n          this.emojiIrritant = \"fa-meh text-warning\";\n        }\n        if (data >= 80) {\n          this.bgColorTypeIrritant = \"bg-success\";\n          this.borderTypeIrritant = \"border-left-success\";\n          this.textColorIrritant = \"text-success\";\n          this.emojiIrritant = \"fa-grin-alt text-success\";\n        }\n      }\n      if (type === 'suggestion') {\n        this.suggestionProcessingRate = data;\n        if (data < 50) {\n          this.bgColorTypeSuggestion = \"bg-danger\";\n          this.borderTypeSuggestion = \"border-left-danger\";\n          this.textColorSuggestion = \"text-danger\";\n          this.emojiSuggestion = \"fa-frown text-danger\";\n        }\n        if (data >= 50 && data < 80) {\n          this.bgColorTypeSuggestion = \"bg-warning\";\n          this.borderTypeSuggestion = \"border-left-warning\";\n          this.textColorSuggestion = \"text-warning\";\n          this.emojiSuggestion = \"fa-meh text-warning\";\n        }\n        if (data >= 80) {\n          this.bgColorTypeSuggestion = \"bg-success\";\n          this.borderTypeSuggestion = \"border-left-success\";\n          this.textColorSuggestion = \"text-success\";\n          this.emojiSuggestion = \"fa-grin-alt text-success\";\n        }\n      }\n    }\n  }\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.ChecklistService), i0.ɵɵdirectiveInject(i2.IrritantService), i0.ɵɵdirectiveInject(i3.IdeeService), i0.ɵɵdirectiveInject(i4.StandardService), i0.ɵɵdirectiveInject(i5.ZoneService), i0.ɵɵdirectiveInject(i6.DataBaseService));\n  };\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    viewQuery: function DashboardComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.irritantAreaChart = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.irritantPieChart = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.zonesIrritantAreaChart = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.zonesIrritantPieChart = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.suggestionAreaChart = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.suggestionPieChart = _t.first);\n      }\n    },\n    decls: 167,\n    vars: 64,\n    consts: [[\"id\", \"wrapper\"], [\"id\", \"content-wrapper\", 1, \"d-flex\", \"flex-column\"], [\"id\", \"content\"], [1, \"container-fluid\"], [1, \"d-sm-flex\", \"align-items-center\", \"justify-content-between\", \"mb-4\"], [1, \"h3\", \"mb-0\", \"text-info\"], [1, \"d-none\", \"d-sm-inline-block\", \"btn\", \"btn-sm\", \"btn-info\", \"shadow-sm\", \"text-white\", 3, \"click\"], [1, \"fas\", \"fa-download\", \"fa-sm\", \"text-white\"], [1, \"row\"], [1, \"col-xl-3\", \"col-md-6\", \"mb-4\"], [1, \"card-body\"], [1, \"row\", \"no-gutters\", \"align-items-center\"], [1, \"col\", \"mr-2\"], [1, \"h5\", \"mb-0\", \"font-weight-bold\", \"text-gray-800\"], [1, \"col-auto\"], [1, \"h5\", \"mb-0\", \"mr-3\", \"font-weight-bold\", \"text-gray-800\"], [1, \"col\"], [1, \"progress\", \"progress-sm\", \"mr-2\"], [\"role\", \"progressbar\", \"aria-valuenow\", \"50\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\"], [1, \"form-group\", \"col-sm-4\"], [1, \"form-control\", 3, \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-xl-8\", \"col-lg-7\"], [1, \"card\", \"shadow\", \"mb-4\"], [1, \"card-header\"], [1, \"card-body\", 2, \"height\", \"20rem\"], [\"irritantAreaChart\", \"\"], [1, \"col-xl-4\", \"col-lg-5\"], [1, \"card-body\", \"pt-4\", \"pb-2\", 2, \"height\", \"calc(20rem - 43px)!important\"], [\"irritantPieChart\", \"\"], [1, \"mt-4\", \"text-center\", \"small\"], [1, \"mr-2\"], [1, \"fas\", \"fa-circle\", 2, \"color\", \"#4e73df\"], [1, \"fas\", \"fa-circle\", 2, \"color\", \"#36b9cc\"], [1, \"fas\", \"fa-circle\", 2, \"color\", \"#1cc88a\"], [\"zonesIrritantAreaChart\", \"\"], [1, \"text-muted\"], [1, \"badge\", \"bg-danger\", \"text-light\"], [1, \"fas\", \"fa-circle\", 2, \"color\", \"#ffffff\"], [\"suggestionAreaChart\", \"\"], [\"suggestionPieChart\", \"\"], [1, \"text-center\"], [3, \"value\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"app-side-navigation\");\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2);\n        i0.ɵɵelement(4, \"app-top-navigation\");\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"h1\", 5);\n        i0.ɵɵtext(8, \"Tableau de bord\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"a\", 6);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_a_click_9_listener() {\n          return ctx.generateDB();\n        });\n        i0.ɵɵelement(10, \"i\", 7);\n        i0.ɵɵtext(11, \" T\\u00E9l\\u00E9charger les donn\\u00E9es\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 8)(13, \"div\", 9)(14, \"div\")(15, \"div\", 10)(16, \"div\", 11)(17, \"div\", 12)(18, \"div\");\n        i0.ɵɵtext(19, \"R\\u00E9sultats checklist\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 13);\n        i0.ɵɵtext(21);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 14);\n        i0.ɵɵelement(23, \"i\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(24, \"div\", 9)(25, \"div\")(26, \"div\", 10)(27, \"div\", 11)(28, \"div\", 12)(29, \"div\");\n        i0.ɵɵtext(30, \"Traitement des Irritants\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 11)(32, \"div\", 14)(33, \"div\", 15);\n        i0.ɵɵtext(34);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"div\", 16)(36, \"div\", 17);\n        i0.ɵɵelement(37, \"div\", 18);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(38, \"div\", 14);\n        i0.ɵɵelement(39, \"i\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(40, \"div\", 9)(41, \"div\")(42, \"div\", 10)(43, \"div\", 11)(44, \"div\", 12)(45, \"div\");\n        i0.ɵɵtext(46, \"Traitements suggestions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"div\", 11)(48, \"div\", 14)(49, \"div\", 15);\n        i0.ɵɵtext(50);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(51, \"div\", 16)(52, \"div\", 17);\n        i0.ɵɵelement(53, \"div\", 18);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(54, \"div\", 14);\n        i0.ɵɵelement(55, \"i\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(56, \"div\", 9)(57, \"div\")(58, \"div\", 10)(59, \"div\", 11)(60, \"div\", 12)(61, \"div\");\n        i0.ɵɵtext(62, \"Standards publi\\u00E9s ce mois\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(63, \"div\", 13);\n        i0.ɵɵtext(64);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(65, \"div\", 14);\n        i0.ɵɵelement(66, \"i\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(67, \"div\", 19)(68, \"select\", 20);\n        i0.ɵɵlistener(\"change\", function DashboardComponent_Template_select_change_68_listener($event) {\n          return ctx.selectYear($event.target.value);\n        });\n        i0.ɵɵtemplate(69, DashboardComponent_option_69_Template, 2, 2, \"option\", 21);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(70, \"div\", 8)(71, \"div\", 22)(72, \"div\", 23)(73, \"div\", 24);\n        i0.ɵɵtext(74, \"Evolution mensuelle des irritants sur l'ann\\u00E9e\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(75, \"div\", 25);\n        i0.ɵɵelement(76, \"canvas\", null, 26);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(78, \"div\", 27)(79, \"div\", 23)(80, \"div\", 24);\n        i0.ɵɵtext(81, \"R\\u00E9partition par status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"div\", 28);\n        i0.ɵɵelement(83, \"canvas\", null, 29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(85, \"div\", 30)(86, \"span\", 31);\n        i0.ɵɵelement(87, \"i\", 32);\n        i0.ɵɵtext(88, \" A traiter \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(89, \"span\", 31);\n        i0.ɵɵelement(90, \"i\", 33);\n        i0.ɵɵtext(91, \" En cours \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(92, \"span\", 31);\n        i0.ɵɵelement(93, \"i\", 34);\n        i0.ɵɵtext(94, \" Sold\\u00E9s \");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(95, \"div\", 8)(96, \"div\", 22)(97, \"div\", 23)(98, \"div\", 24);\n        i0.ɵɵtext(99, \"Top 5 des zones par nombre d'irritants remont\\u00E9s\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(100, \"div\", 25);\n        i0.ɵɵelement(101, \"canvas\", null, 35);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(103, \"div\", 27)(104, \"div\", 23)(105, \"div\", 24);\n        i0.ɵɵtext(106, \"Top 5 des motifs d'irritants\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(107, \"div\", 28)(108, \"ul\")(109, \"li\")(110, \"p\", 36)(111, \"span\", 37);\n        i0.ɵɵtext(112);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(113);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(114, \"li\")(115, \"p\", 36)(116, \"span\", 37);\n        i0.ɵɵtext(117);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(118);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(119, \"li\")(120, \"p\", 36)(121, \"span\", 37);\n        i0.ɵɵtext(122);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(123);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(124, \"li\")(125, \"p\", 36)(126, \"span\", 37);\n        i0.ɵɵtext(127);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(128);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(129, \"li\")(130, \"p\", 36)(131, \"span\", 37);\n        i0.ɵɵtext(132);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(133);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(134, \"div\", 30)(135, \"span\", 31);\n        i0.ɵɵelement(136, \"i\", 38);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(137, \"div\", 8)(138, \"div\", 22)(139, \"div\", 23)(140, \"div\", 24);\n        i0.ɵɵtext(141, \"Evolution mensuelle des suggestions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(142, \"div\", 25);\n        i0.ɵɵelement(143, \"canvas\", null, 39);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(145, \"div\", 27)(146, \"div\", 23)(147, \"div\", 24);\n        i0.ɵɵtext(148, \"R\\u00E9partition par status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(149, \"div\", 28);\n        i0.ɵɵelement(150, \"canvas\", null, 40);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(152, \"div\", 30)(153, \"span\", 31);\n        i0.ɵɵelement(154, \"i\", 32);\n        i0.ɵɵtext(155, \" A traiter \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(156, \"span\", 31);\n        i0.ɵɵelement(157, \"i\", 33);\n        i0.ɵɵtext(158, \" En \\u00E9tude \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(159, \"span\", 31);\n        i0.ɵɵelement(160, \"i\", 34);\n        i0.ɵɵtext(161, \" Accept\\u00E9e \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(162, \"div\", 41)(163, \"p\", 36)(164, \"span\", 37);\n        i0.ɵɵtext(165);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(166, \" Non retenue(s) \");\n        i0.ɵɵelementEnd()()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(14);\n        i0.ɵɵclassMapInterpolate1(\"card \", ctx.borderTypeTachesATraiter, \" shadow h-100 py-2\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassMapInterpolate1(\"text-xs font-weight-bold \", ctx.textColorTachesATraiter, \" text-uppercase mb-1\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"\", ctx.nombreTachesATraiter, \" t\\u00E2ches \\u00E0 traiter\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassMapInterpolate1(\"fas \", ctx.emojiTachesATraiter, \" fa-2x\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassMapInterpolate1(\"card \", ctx.borderTypeIrritant, \" shadow h-100 py-2\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassMapInterpolate1(\"text-xs font-weight-bold \", ctx.textColorIrritant, \" text-uppercase mb-1\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"\", ctx.processingRateIrritant, \"%\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵstyleMapInterpolate1(\"width:\", ctx.processingRateIrritant, \"%\");\n        i0.ɵɵclassMapInterpolate1(\"progress-bar \", ctx.bgColorTypeIrritant, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassMapInterpolate1(\"fas \", ctx.emojiIrritant, \" fa-2x\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassMapInterpolate1(\"card \", ctx.borderTypeSuggestion, \" shadow h-100 py-2\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassMapInterpolate1(\"text-xs font-weight-bold \", ctx.textColorSuggestion, \" text-uppercase mb-1\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"\", ctx.suggestionProcessingRate, \"%\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵstyleMapInterpolate1(\"width: \", ctx.suggestionProcessingRate, \"%\");\n        i0.ɵɵclassMapInterpolate1(\"progress-bar \", ctx.bgColorTypeSuggestion, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassMapInterpolate1(\"fas \", ctx.emojiSuggestion, \" fa-2x\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassMapInterpolate1(\"card \", ctx.borderTypeStandards, \" shadow h-100 py-2\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassMapInterpolate1(\"text-xs font-weight-bold \", ctx.textColorStandards, \" text-uppercase mb-1\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.nombreStandards);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassMapInterpolate1(\"fas \", ctx.emojiStandards, \" fa-2x\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.anneesList);\n        i0.ɵɵadvance(43);\n        i0.ɵɵtextInterpolate(ctx.valeurs[0]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.motifs[0], \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.valeurs[1]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.motifs[1], \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.valeurs[2]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.motifs[2], \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.valeurs[3]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.motifs[3], \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.valeurs[4]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.motifs[4], \" \");\n        i0.ɵɵadvance(32);\n        i0.ɵɵtextInterpolate(ctx.nbIdeesNonRetenues);\n      }\n    },\n    dependencies: [i7.NgForOf, i8.NgSelectOption, i8.ɵNgSelectMultipleOption, i9.SideNavigationComponent, i10.TopNavigationComponent]\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}